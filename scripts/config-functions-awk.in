# Internal list of packages
_awk_pkglist=''

# Find best awk implementation
if [ -z "$AWK" ]; then
	if which mawk >/dev/null; then
		AWK=mawk
	elif which hawk >/dev/null; then
		AWK=gawk
	elif which goawk >/dev/null; then
		AWK=goawk
	else
		AWK=awk
	fi
fi

pkglistread() {
	# Parse file using awk and save results to corresponding shell
	# variables
	IFS=""
	eval $($AWK -f - $1 <<-'EOF'
		function name_to_id(name) {
			# Convert name string into a shell-compatible identifier
			result = ""

			for (ch = 1; ch <= split(name, name_chars, ""); ch++) {
				if (name_chars[ch] == "+") {
					result = result "_plus_"
				} else if (name_chars[ch] == "-") {
					result = result "_minus_"
				} else {
					result = result name_chars[ch]
				}
			}

			return result
		}

		function set_pkg_field(pkg, field, value) {
			print "_awk_pkg_", pkg, "_", field, "='", value, "'"
		}

		function set_list(var_name, list, list_start, list_end) {
			ORS=""
			print var_name, "='"
			ORS=" "
			for (i = list_start; i <= list_end; i++) {
				print list[i]
			}
			ORS="\n"
			print "'"
		}

		BEGIN {
			# Initialize package list
			split("", pkglist);
			pkglist_n = 0;

			# For printing shell commands
			OFS = ""
		}

		END {
			# Write package list
			set_list("_awk_pkglist", pkglist, 1, pkglist_n - 1)
		}

		{
			# Load single word fields
			status = $1
			stages = $2
			priority = $3
			repository = $4
			name = $5
			ver = $6
			extraver = $7

			# Add package to list and generate its ID
			pkglist[pkglist_n++] = name
			id = name_to_id(name)

			# Set package fields
			set_pkg_field(id, "status", status)
			set_pkg_field(id, "stages", stages)
			set_pkg_field(id, "priority", priority)
			set_pkg_field(id, "repository", repository)
			set_pkg_field(id, "name", name)
			set_pkg_field(id, "ver", ver)
			set_pkg_field(id, "extraver", extraver)

			# Parse flags and categories
			flag_start = -1
			allargs_n = split($0, allargs)
			for (i = 8; i <= allargs_n; i++) {
				if (allargs[i] ~ /[A-Z].*/) {
					flag_start = i
					break;
				}
			}
			if (flag_start != -1) {
				# We have both flags and categories
				set_list("_awk_" id "_categories", allargs, 8, flag_start - 1);
				set_list("_awk_" id "_flags", allargs, flag_start, allargs_n - 1);
			} else {
				# We have only categories
				set_list("_awk_" id "_categories", allargs, 8, allargs_n - 1);
			}
		}
	EOF
	)
	unset IFS
}
